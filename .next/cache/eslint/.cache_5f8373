[{"E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\pages\\documentation.tsx":"1","E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\pages\\index.tsx":"2","E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\pages\\overview.tsx":"3","E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\pages\\settings.tsx":"4","E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\pages\\transactions.tsx":"5","E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\pages\\_app.tsx":"6","E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\pages\\_document.tsx":"7","E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\Button.tsx":"8","E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\CloseSideBarMenu.tsx":"9","E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\Layout.tsx":"10","E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\Logout.tsx":"11","E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\Modal\\BaseModal.tsx":"12","E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\Modal\\LoginModal.tsx":"13","E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\Modal\\SignupModal.tsx":"14","E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\NavItem.tsx":"15","E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\Overview\\OverviewData.tsx":"16","E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\Settings\\SettingsData.tsx":"17","E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\SideBarMenu.tsx":"18","E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\Table.tsx":"19","E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\Transactions\\TransactionsData.tsx":"20"},{"size":427,"mtime":1636356119737,"results":"21","hashOfConfig":"22"},{"size":2419,"mtime":1636403803058,"results":"23","hashOfConfig":"22"},{"size":1261,"mtime":1636403975195,"results":"24","hashOfConfig":"22"},{"size":1261,"mtime":1636404085497,"results":"25","hashOfConfig":"22"},{"size":1611,"mtime":1636404156596,"results":"26","hashOfConfig":"22"},{"size":1715,"mtime":1636399930793,"results":"27","hashOfConfig":"22"},{"size":1633,"mtime":1636347648137,"results":"28","hashOfConfig":"22"},{"size":664,"mtime":1636391928082,"results":"29","hashOfConfig":"22"},{"size":501,"mtime":1636346273674,"results":"30","hashOfConfig":"22"},{"size":6221,"mtime":1636389886485,"results":"31","hashOfConfig":"22"},{"size":608,"mtime":1636399487974,"results":"32","hashOfConfig":"22"},{"size":1576,"mtime":1636399038207,"results":"33","hashOfConfig":"22"},{"size":3116,"mtime":1636403074780,"results":"34","hashOfConfig":"22"},{"size":4361,"mtime":1636404609942,"results":"35","hashOfConfig":"22"},{"size":1624,"mtime":1636389323464,"results":"36","hashOfConfig":"22"},{"size":1570,"mtime":1636374881859,"results":"37","hashOfConfig":"22"},{"size":5329,"mtime":1636410595549,"results":"38","hashOfConfig":"22"},{"size":540,"mtime":1636362117214,"results":"39","hashOfConfig":"22"},{"size":2879,"mtime":1636377697878,"results":"40","hashOfConfig":"22"},{"size":2243,"mtime":1636433906227,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ly9evy",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\pages\\documentation.tsx",[],"E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\pages\\index.tsx",["86"],"import { Auth, getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport type { NextPage } from \"next\";\nimport Head from \"next/head\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../components/Button\";\nimport LoginModal from \"../components/Modal/LoginModal\";\nimport SignupModal from \"../components/Modal/SignupModal\";\nimport app from \"../firebase/clientApp\";\nimport Router from \"next/router\";\n\nconst SHome = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  height: 100vh;\n`;\n\nconst SText = styled.div`\n  color: white;\n  max-width: 400px;\n  text-align: center;\n`;\n\nconst SButtons = styled.div`\n  padding: 2em;\n  width: 260px;\n`;\n\nconst Home: NextPage = () => {\n  const [showSignup, setShowSignup] = useState(false);\n  const [showLogin, setShowLogin] = useState(false);\n\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const [auth, setAuth] = useState<Auth | null>(null);\n\n  useEffect(() => {\n    const auth = getAuth(app);\n    auth && setAuth(auth);\n  }, []);\n\n  useEffect(() => {\n    if (auth !== null) {\n      onAuthStateChanged(auth, async (user) => {\n        if (user) {\n          setLoggedIn(true);\n          Router.push(\"/overview\");\n        } else {\n          setLoggedIn(false);\n        }\n      });\n    }\n  }, [auth]);\n\n  if (loggedIn) {\n    return null;\n  } else {\n    return (\n      <div>\n        <Head>\n          <title>reef pay</title>\n          <meta\n            name=\"description\"\n            content=\"A payment processor built on reef\"\n          />\n          <link rel=\"icon\" href=\"/favicon.ico\" />\n        </Head>\n        <SHome>\n          <SignupModal show={showSignup} setShow={setShowSignup} />\n          <LoginModal show={showLogin} setShow={setShowLogin} />\n          <img src=\"assets/reef-pay-big.png\" alt=\"\" />\n          <SButtons>\n            <Button\n              text=\"Create Account\"\n              click={() => {\n                setShowSignup(!showSignup);\n              }}\n            />\n            <br />\n            <Button\n              text=\"Login\"\n              click={() => {\n                setShowLogin(!showLogin);\n              }}\n            />\n          </SButtons>\n          <SText>\n            Welcome to Reef Pay create an account or login to accept payments\n          </SText>\n        </SHome>\n      </div>\n    );\n  }\n};\n\nexport default Home;\n","E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\pages\\overview.tsx",[],"E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\pages\\settings.tsx",[],"E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\pages\\transactions.tsx",[],"E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\pages\\_app.tsx",[],"E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\pages\\_document.tsx",[],"E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\Button.tsx",[],"E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\CloseSideBarMenu.tsx",[],"E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\Layout.tsx",["87","88"],"import { useRouter } from \"next/router\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { almostBlack, darkBlue } from \"../constant/colors\";\r\nimport CloseSideBarButton from \"./CloseSideBarMenu\";\r\nimport LogOut from \"./Logout\";\r\nimport NavItem from \"./NavItem\";\r\nimport SideBarMenu from \"./SideBarMenu\";\r\n\r\nconst navbar_height = \"100px\";\r\nconst sidebar_width = \"250px\";\r\n\r\nconst SLayout = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0px;\r\n  padding: 0px;\r\n  position: fixed;\r\n  background: ${almostBlack};\r\n\r\n  @media only screen and (min-width: 950px) {\r\n    display: grid;\r\n  }\r\n`;\r\n\r\nconst SSidebar = styled.div`\r\n  background-color: ${almostBlack};\r\n  position: fixed;\r\n  height: 100%;\r\n  z-index: 20;\r\n  border-right: solid 5px ${darkBlue};\r\n  padding: 0px;\r\n  margin: 0px;\r\n  overflow: auto;\r\n  display: block;\r\n\r\n  @media only screen and (max-width: 950px) {\r\n    display: none;\r\n    width: 250px;\r\n  }\r\n\r\n  @media only screen and (min-width: 950px) {\r\n    width: ${sidebar_width};\r\n    max-width: 250px;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst SMain = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0px;\r\n  margin: 0px;\r\n  max-width: 100%;\r\n  position: relative;\r\n\r\n  @media only screen and (min-width: 950px) {\r\n    width: calc(100vw - ${sidebar_width});\r\n    margin-left: ${sidebar_width};\r\n  }\r\n`;\r\n\r\nconst SLogo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: ${navbar_height};\r\n  padding: 0 0 0 1em;\r\n`;\r\n\r\nconst SNavBar = styled.header`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: ${navbar_height};\r\n  padding: 0px;\r\n  background-color: ${almostBlack};\r\n  z-index: 1;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  @media only screen and (max-width: 950px) {\r\n    width: 100%;\r\n    align-content: center;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  @media only screen and (min-width: 950px) {\r\n    width: 100%;\r\n    align-content: space-between;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nconst SNavBarActions = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  height: 100%;\r\n\r\n  @media only screen and (max-width: 950px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst SButton = styled.button`\r\n  display: block;\r\n\r\n  @media only screen and (max-width: 950px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst SPageName = styled.div`\r\n  color: white;\r\n  margin: 0 0 0 2em;\r\n  font-size: 30px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst SDisplayName = styled.div`\r\n  color: white;\r\n  font-size: 18px;\r\n  padding: 0.5em 1em;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst SProfileActions = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  color: white;\r\n  margin: 0 2em 0 0;\r\n  font-size: 18px;\r\n  height: 100%;\r\n\r\n  &:hover ${SDisplayName} {\r\n    background-color: ${darkBlue};\r\n  }\r\n`;\r\n\r\nconst SContent = styled.main`\r\n  width: 100%;\r\n  height: calc(100vh - ${navbar_height});\r\n  position: relative;\r\n  top: ${navbar_height};\r\n  overflow-y: auto !important;\r\n  z-index: 0;\r\n\r\n  div {\r\n    /* overflow: auto !important; */\r\n  }\r\n`;\r\n\r\nexport default function Layout({ children }: { children: any }) {\r\n  const router = useRouter();\r\n\r\n  const childElement = useRef<HTMLDivElement | null>(null);\r\n\r\n  const [name, setName] = useState(\"null\");\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const topPos = childElement.current as HTMLElement;\r\n    topPos.scrollIntoView();\r\n  }, [router]);\r\n\r\n  useEffect(() => {\r\n    const split = router.pathname.split(\"/\")[1];\r\n\r\n    switch (split) {\r\n      case \"overview\":\r\n        setName(\"Overview\");\r\n        break;\r\n      case \"transactions\":\r\n        setName(\"Transactions\");\r\n        break;\r\n      case \"settings\":\r\n        setName(\"Settings\");\r\n        break;\r\n      case \"documentation\":\r\n        setName(\"API Doc\");\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [router]);\r\n\r\n  const setActive = useCallback(\r\n    (iconName: string) => {\r\n      return iconName === name ? true : false;\r\n    },\r\n    [name, router]\r\n  );\r\n\r\n  return (\r\n    <SLayout>\r\n      <SSidebar id=\"sidebar\">\r\n        <div\r\n          style={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}\r\n        >\r\n          <SLogo>\r\n            <img src=\"assets/reef-pay-small.png\" alt=\"\" />\r\n            <div style={{ flexGrow: 1 }}></div>\r\n            <CloseSideBarButton />\r\n          </SLogo>\r\n          <NavItem\r\n            setName={setName}\r\n            active={setActive(\"Overview\")}\r\n            route=\"/overview\"\r\n            name=\"Overview\"\r\n            icon=\"home\"\r\n          />\r\n          <NavItem\r\n            setName={setName}\r\n            active={setActive(\"Transactions\")}\r\n            route=\"/transactions\"\r\n            name=\"Transactions\"\r\n            icon=\"chart\"\r\n          />\r\n          <NavItem\r\n            setName={setName}\r\n            active={setActive(\"Settings\")}\r\n            route=\"/settings\"\r\n            name=\"Settings\"\r\n            icon=\"setting\"\r\n          />\r\n          <div style={{ flexGrow: 1 }}></div>\r\n          <NavItem\r\n            setName={setName}\r\n            active={setActive(\"API Doc\")}\r\n            route=\"/documentation\"\r\n            name=\"API Doc\"\r\n            icon=\"document\"\r\n          />\r\n        </div>\r\n      </SSidebar>\r\n      <SMain>\r\n        <>\r\n          <SNavBar>\r\n            <SNavBarActions>\r\n              <SPageName>{name}</SPageName>\r\n              <div style={{ flexGrow: 1 }}></div>\r\n              <SProfileActions\r\n                onClick={() => {\r\n                  setShow(!show);\r\n                }}\r\n                onMouseOver={() => {\r\n                  setShow(true);\r\n                }}\r\n                onMouseLeave={() => {\r\n                  setShow(false);\r\n                }}\r\n              >\r\n                <SDisplayName>kelvinpraises</SDisplayName>\r\n                <LogOut show={show} />\r\n              </SProfileActions>\r\n            </SNavBarActions>\r\n\r\n            <SideBarMenu />\r\n          </SNavBar>\r\n\r\n          <SContent>\r\n            <div ref={childElement}>{children}</div>\r\n          </SContent>\r\n        </>\r\n      </SMain>\r\n    </SLayout>\r\n  );\r\n}\r\n","E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\Logout.tsx",[],"E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\Modal\\BaseModal.tsx",[],"E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\Modal\\LoginModal.tsx",[],"E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\Modal\\SignupModal.tsx",[],"E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\NavItem.tsx",["89"],"import Link from \"next/link\";\r\nimport React, { FC } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { darkBlue, grey } from \"../constant/colors\";\r\n\r\ninterface props {\r\n  icon: string;\r\n  name: string;\r\n  route: string;\r\n  active: boolean;\r\n  setName: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\ninterface ISNavItem {\r\n  active: boolean;\r\n}\r\n\r\nconst SLink = styled.a`\r\n  text-decoration: none;\r\n  color: white;\r\n`;\r\n\r\nconst SNavItem = styled.div<ISNavItem>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  margin: 0.7em 1em;\r\n  padding: 1em;\r\n  border-radius: 7.8px;\r\n\r\n  cursor: pointer;\r\n  color: ${grey};\r\n  font-weight: bold;\r\n\r\n  * {\r\n    transition: none !important;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: grey;\r\n  }\r\n\r\n  ${({ active }) =>\r\n    active &&\r\n    `\r\n    color: white !important;\r\n     background-color:${darkBlue};\r\n     a{\r\n      text-decoration: none;\r\n      color: white !important;\r\n     }`}\r\n`;\r\n\r\nconst NavItem: FC<props> = ({\r\n  icon,\r\n  route,\r\n  name,\r\n  children,\r\n  active,\r\n  setName,\r\n}) => {\r\n  const location = () => {\r\n    if (active) {\r\n      return `/assets/${icon}-active.svg`;\r\n    } else {\r\n      return `/assets/${icon}-inactive.svg`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div onClick={() => setName(name)}>\r\n      <Link passHref={true} href={route}>\r\n        <SLink>\r\n          <SNavItem active={active} className={\"classNames\"}>\r\n            <img src={location()} alt=\"\" />\r\n            &nbsp;\r\n            <div>{name}</div>\r\n          </SNavItem>\r\n        </SLink>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavItem;\r\n","E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\Overview\\OverviewData.tsx",[],"E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\Settings\\SettingsData.tsx",["90","91","92"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Auth, getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { doc, Firestore, getFirestore, onSnapshot } from \"firebase/firestore\";\r\nimport app from \"../../firebase/clientApp\";\r\n\r\nimport { grey } from \"../../constant/colors\";\r\nimport Button from \"../Button\";\r\nimport { Functions, getFunctions, httpsCallable } from \"firebase/functions\";\r\n\r\ntype NullString = string | null;\r\n\r\nconst SAddress = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 2em;\r\n`;\r\n\r\nconst SAPIKey = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 2em;\r\n`;\r\n\r\nconst SInput = styled.input`\r\n  min-width: 300px;\r\n  width: 100%;\r\n  max-width: 500px;\r\n  font-size: 24px;\r\n  padding: 6px;\r\n`;\r\n\r\nconst Label1 = styled.label`\r\n  font-size: 28px;\r\n  color: white;\r\n`;\r\n\r\nconst Label2 = styled.label`\r\n  font-size: 14px;\r\n  color: ${grey};\r\n`;\r\n\r\nconst SToggle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  position: absolute;\r\n  color: ${grey};\r\n`;\r\n\r\nconst SApiKeyGroup1 = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n`;\r\n\r\nconst SApiKeyGroup2 = styled.div`\r\n  display: flex;\r\n  min-width: 312px;\r\n  width: 80%;\r\n  max-width: 512px;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nexport default function SettingsData() {\r\n  const [db, setDb] = useState<Firestore | null>(null);\r\n  const [auth, setAuth] = useState<Auth | null>(null);\r\n\r\n  const [address, setAddress] = useState(\"\");\r\n  const [apiKey, setApiKey] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n\r\n  const [uid, setUid] = useState<NullString>(\"\");\r\n\r\n  const handleChange = (event: any) => {\r\n    let value = event.target.value;\r\n    setAddress(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const db = getFirestore(app);\r\n    db && setDb(db);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const auth = getAuth(app);\r\n    auth && setAuth(auth);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (auth !== null) {\r\n      onAuthStateChanged(auth, (user) => {\r\n        if (user) {\r\n          setUid(user.uid);\r\n        }\r\n      });\r\n    }\r\n  }, [auth]);\r\n\r\n  useEffect(() => {\r\n    if (db !== null && uid?.length! > 0) {\r\n      const unsub = onSnapshot(doc(db, \"merchants\", uid!), (doc) => {\r\n        const walletAddress = doc?.data()?.walletAddress;\r\n        const apiKey = doc?.data()?.apiKey;\r\n\r\n        setAddress(walletAddress);\r\n        setApiKey(apiKey);\r\n      });\r\n\r\n      return () => unsub();\r\n    }\r\n  }, [db, uid]);\r\n\r\n  const [functions, setFunctions] = useState<Functions | null>(null);\r\n\r\n  useEffect(() => {\r\n    const functions = getFunctions(app);\r\n    functions && setFunctions(functions);\r\n  }, []);\r\n\r\n  const generateAPIKey = useCallback(() => {\r\n    if (functions !== null) {\r\n      const generateAPIKey = httpsCallable(functions, \"generateAPIKey\");\r\n\r\n      generateAPIKey();\r\n    }\r\n  }, [functions]);\r\n\r\n  const saveWalletAddress = useCallback(() => {\r\n    if (functions !== null) {\r\n      const saveWalletAdress = httpsCallable(functions, \"saveWalletAdress\");\r\n\r\n      saveWalletAdress({ walletAddress: address });\r\n    }\r\n  }, [functions]);\r\n\r\n  return (\r\n    <div>\r\n      <SAddress>\r\n        <Label1 htmlFor=\"address\">Wallet Address</Label1>\r\n        <Label2 htmlFor=\"address\">\r\n          This wallet is where your funds are sent too\r\n        </Label2>\r\n        <div style={{ display: \"flex\" }}>\r\n          <SInput\r\n            type=\"text\"\r\n            name=\"address\"\r\n            value={address}\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n          &nbsp; &nbsp; &nbsp; &nbsp;\r\n          <Button text=\"Save\" click={() => saveWalletAddress()} />\r\n        </div>\r\n      </SAddress>\r\n      <SAPIKey>\r\n        <Label1 htmlFor=\"apiKey\">API Key</Label1>\r\n        <Label2 htmlFor=\"apiKey\">Keep safe your API key</Label2>\r\n        <SApiKeyGroup1>\r\n          <SApiKeyGroup2>\r\n            <SInput\r\n              type={show ? \"text\" : \"password\"}\r\n              name=\"apiKey\"\r\n              value={apiKey}\r\n            />\r\n            <SToggle>\r\n              <img\r\n                onClick={() => {\r\n                  setShow(false);\r\n                }}\r\n                style={{\r\n                  padding: 10,\r\n                  width: 35,\r\n                  display: show ? \"block\" : \"none\",\r\n                }}\r\n                src=\"assets/hide.svg\"\r\n                alt=\"\"\r\n              />\r\n              <img\r\n                onClick={() => {\r\n                  setShow(true);\r\n                }}\r\n                style={{\r\n                  padding: 10,\r\n                  width: 35,\r\n                  display: show ? \"none\" : \"block\",\r\n                }}\r\n                src=\"assets/show.svg\"\r\n                alt=\"\"\r\n              />\r\n            </SToggle>\r\n          </SApiKeyGroup2>\r\n          &nbsp; &nbsp; &nbsp; &nbsp;\r\n          <div style={{ display: \"flex\" }}>\r\n            <Button text=\"Generate Key\" click={() => generateAPIKey()} />\r\n            &nbsp; &nbsp; &nbsp; &nbsp;\r\n            <Button\r\n              text=\"Copy\"\r\n              click={() => {\r\n                alert(\"not yet working\");\r\n              }}\r\n            />\r\n          </div>\r\n          <div style={{ flex: 2 }}></div>\r\n        </SApiKeyGroup1>\r\n      </SAPIKey>\r\n    </div>\r\n  );\r\n}\r\n","E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\SideBarMenu.tsx",[],"E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\Table.tsx",[],"E:\\omotola praise\\Projects\\14. Reefscan\\reef-admin\\components\\Transactions\\TransactionsData.tsx",[],{"ruleId":"93","severity":1,"message":"94","line":73,"column":11,"nodeType":"95","endLine":73,"endColumn":55},{"ruleId":"96","severity":1,"message":"97","line":195,"column":5,"nodeType":"98","endLine":195,"endColumn":19,"suggestions":"99"},{"ruleId":"93","severity":1,"message":"94","line":205,"column":13,"nodeType":"95","endLine":205,"endColumn":59},{"ruleId":"93","severity":1,"message":"94","line":75,"column":13,"nodeType":"95","endLine":75,"endColumn":44},{"ruleId":"96","severity":1,"message":"100","line":134,"column":6,"nodeType":"98","endLine":134,"endColumn":17,"suggestions":"101"},{"ruleId":"93","severity":1,"message":"94","line":165,"column":15,"nodeType":"95","endLine":176,"endColumn":17},{"ruleId":"93","severity":1,"message":"94","line":177,"column":15,"nodeType":"95","endLine":188,"endColumn":17},"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See https://nextjs.org/docs/messages/no-img-element.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'router'. Either exclude it or remove the dependency array.","ArrayExpression",["102"],"React Hook useCallback has a missing dependency: 'address'. Either include it or remove the dependency array.",["103"],{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [name]",{"range":"108","text":"109"},"Update the dependencies array to be: [address, functions]",{"range":"110","text":"111"},[4098,4112],"[name]",[3166,3177],"[address, functions]"]